/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        tdmp: tdmp {
            compatible = "zmk,behavior-tap-dance";
            label = "TDMP";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&lt 3 DELETE>;
        };

        caps: caps {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E     &kp R  &kp T           &kp Y        &kp U      &kp I      &kp O    &kp P     &kp BSPC
&caps             &kp A  &kp S  &kp D     &kp F  &kp G           &kp H        &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B           &kp N        &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
                                &kp LGUI  &tdmp  &kp LEFT_ALT    &lt 1 ENTER  &kp SPACE  &kp TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE        &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans       &trans   &trans          &kp UP_ARROW    &trans     &trans  &kp BACKSPACE
&kp LEFT_SHIFT    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans       &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&kp LEFT_CONTROL  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans       &trans   &trans          &trans          &trans     &trans  &trans
                                        &kp LGUI      &kp NUMBER_0  &kp SPACE    &kp RET  &kp SPACE       &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &trans     &trans          &mmv MOVE_UP    &trans           &trans  &msc SCRL_UP
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &msc SCRL_DOWN
&trans  &trans  &trans  &trans   &trans   &trans     &trans     &trans          &trans          &trans           &trans  &trans
                        &trans   &trans   &trans     &mkp LCLK  &mkp RCLK       &trans
            >;
        };
    };
};
